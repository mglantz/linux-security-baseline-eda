#                                    __   __  __
#                                    \ \ / / / /
#                                     \ V / / /
#                                      \_/  \/
#
#                                    V E C T O R
#                                   Configuration
#
# ------------------------------------------------------------------------------
# Website: https://vector.dev
# Docs: https://vector.dev/docs
# Chat: https://chat.vector.dev
# ------------------------------------------------------------------------------

# Change this to use a non-default directory for Vector data storage:
# data_dir: "/var/lib/vector"

# Random Syslog-formatted logs
sources:
  rsyslog_source:
    type: "file"
    include:
      - /var/log/external/**/*.log 

# Parse Syslog logs
# See the Vector Remap Language reference for more info: https://vrl.dev
transforms:
  parse_logs:
    type: "remap"
    inputs: ["rsyslog_source"]
    source: |
      . = parse_syslog!(string!(.message)) 

      # Create identifier we can process based on auditd key
      if (contains(.message, "security-baseline")) {
        .securitybaseline = "security-baseline event"
      } else {
        .securitybaseline = "ignore"
      }

      # Ansible uses Python...
      if (contains(.message, "python3.9")) {
        .securitybaseline = "ignore"
      }

      # Someone removed a RPM
      if (contains(.message, "remove sw")) {
        .securitybaseline = "security-baseline event"
      }

      # Use of sysctl
      if (contains(.message, "/usr/sbin/sysctl")) {
        .securitybaseline = "security-baseline event"
      }

      # For dedup purposes
      .timestamp = format_timestamp!(now(),"%Y-%m-%d-%H-%M")

      .hostname = .hostname + ".sudo.net"

  filter_out_info:
    type: "filter"
    inputs:
      - parse_logs
    condition: .appname == "audispd"

  last_filter:
    type: "filter"
    inputs:
      - filter_out_info
    condition: .securitybaseline != "ignore"

  final_dedup:
    type: dedupe
    inputs:
      - last_filter
    cache:
      num_events: 5
    fields:
      match:
        - securitybaseline
        - timestamp

# Print parsed logs to stdout
sinks:
  kafka:
    type: kafka
    inputs:
      - final_dedup
    bootstrap_servers: kafka.sudo.net:9092
    encoding:
      codec: "json"
      json:
        pretty: true
    topic: security-baseline-events
  print:
    type: "console"
    inputs: ["final_dedup"]
    encoding:
      codec: "json"
      json:
        pretty: true

# Vector's GraphQL API (disabled by default)
# Uncomment to try it out with the `vector top` command or
# in your browser at http://localhost:8686
api:
  enabled: true
  address: "0.0.0.0:8686"

